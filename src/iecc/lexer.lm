/*******************************************************************************
* Project: IECC (IEC 61131-3 Languages Compiler for Arduino).                  *
* Authors: Paulo H. Torrens <paulotorrens AT gnu DOT org>.                     *
* License: GNU GPLv3+.                                                         *
*                                                                              *
* Language: Flex -> (Modern) Objective-C.                                      *
* Description: Compiler lexer file.                                            *
********************************************************************************
* Copyright (C) 2015 - Paulo H. Torrens. All rights reserved.                  *
*                                                                              *
* This program is free software: you can redistribute it and/or modify it      *
* under the terms of the GNU General Public License as published by the Free   *
* Software Foundation, either version 3 of the License, or (at your option)    *
* any later version.                                                           *
*                                                                              *
* This program is distributed in the hope that it will be useful, but WITHOUT  *
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or        *
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for     *
* more details.                                                                *
*                                                                              *
* You should have received a copy of the GNU General Public License along with *
* this program. If not, see <http://www.gnu.org/licenses/>.                    *
*******************************************************************************/
/* Small header */
%{
  // Header made by Bison:
  #import "./parser.tmp.h"
  
  //
  #define YY_USER_ACTION { \
    yylloc.first_line = yylloc.last_line = yylineno; \
    yylloc.first_column = yycolumn; \
    yycolumn += yyleng; \
    yylloc.last_column = yycolumn; \
  }
  
  //
  int yycolumn = 1;
%}

/* Options */
%option 7bit
%option noyywrap
%option yylineno
%option case-insensitive

/* Constants, taken from table 2 of the standard */
letter              [A-Z]
digit               [0-9]
bit                 [01]
octal_digit         [0-7]
hex_digit           [0-9A-F]

%%
 /* Whitespace and comments, taken from
    table 3 of the standard */
[\r]?[\n]                               yycolumn = 1;
[ \t]+                                  (void)0;



 /* Identifier, taken from table 2 of
    the standard */
_?{letter}(_?({letter}|{digit})+)*      {
                                          // TODO
                                          return TOK_ID;
                                        };

_                                       {
                                          // TODO: warn about raw _ on program
                                        };
.
